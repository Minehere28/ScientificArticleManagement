@* @model IEnumerable<ScientificArticleManagement.Models.User> *@

@* @{ *@
@*     ViewData["Title"] = "Index"; *@
@* } *@

@* <h1>Index</h1> *@

@* <p> *@
@*     <a asp-action="Create">Create New</a> *@
@* </p> *@
@* <table class="table"> *@
@*     <thead> *@
@*         <tr> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.FullName) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.BirthDate) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.Email) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.Username) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.Password) *@
@*             </th> *@
@*             <th> *@
@*                 @Html.DisplayNameFor(model => model.Role) *@
@*             </th> *@
@*             <th></th> *@
@*         </tr> *@
@*     </thead> *@
@*     <tbody> *@
@* @foreach (var item in Model) { *@
@*         <tr> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.FullName) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.BirthDate) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.Email) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.Username) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.Password) *@
@*             </td> *@
@*             <td> *@
@*                 @Html.DisplayFor(modelItem => item.Role) *@
@*             </td> *@
@*             <td> *@
@*                 <a asp-action="Edit" asp-route-id="@item.UserId">Edit</a> | *@
@*                 <a asp-action="Details" asp-route-id="@item.UserId">Details</a> | *@
@*                 <a asp-action="Delete" asp-route-id="@item.UserId">Delete</a> *@
@*             </td> *@
@*         </tr> *@
@* } *@
@*     </tbody> *@
@* </table> *@


            @* ///////////// *@


@model X.PagedList.IPagedList<ScientificArticleManagement.Models.User>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "All Athors";
}

<h2 class="mb-3">All Authors</h2>

<form asp-action="All" method="get" class="mb-3">
    <div class="row g-2">
        <div class="col-md-3">
            <input type="text" name="name" value="@(Context.Request.Query["name"])" class="form-control" placeholder="Tìm theo tên..." />
        </div>
        <div class="col-md-3">
            <input type="text" name="username" value="@(Context.Request.Query["username"])" class="form-control" placeholder="Tìm theo username..." />
        </div>
        <div class="col-md-3">
            <input type="text" name="email" value="@(Context.Request.Query["email"])" class="form-control" placeholder="Tìm theo email..." />
        </div>
        <div class="col-md-3">
            <select name="gender" class="form-control">
                <option value="" selected="@(string.IsNullOrEmpty(Context.Request.Query["gender"]))">-- Giới tính --</option>
                <option value="Nam" selected="@(Context.Request.Query["gender"] == "Nam")">Nam</option>
                <option value="Nữ" selected="@(Context.Request.Query["gender"] == "Nữ")">Nữ</option>
                <option value="Khác" selected="@(Context.Request.Query["gender"] == "Khác")">Khác</option>
            </select>
        </div>
    </div>
    <div class="mt-2">
        <button type="submit" class="btn btn-primary">Tìm kiếm</button>
        <a asp-action="All" class="btn btn-secondary">Đặt lại</a>
    </div>
</form>

<div class="d-flex justify-content-end mb-3">
    <a asp-action="Add" class="btn btn-success">
        ➕ Thêm người dùng
    </a>
</div>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Username</th>
            <th>Full Name</th>
            <th>Email</th>
            <th>Birth Date</th>
            <th>Gender</th>
            <th>Role</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.Username</td>
                <td>@user.FullName</td>
                <td>@user.Email</td>
                <td>@user.BirthDate.ToString("dd/MM/yyyy")</td>
                <td>@user.Gender</td>
                <td>@user.Role</td>
                <td>
                    <a asp-action="Details" asp-route-id="@user.UserId" class="btn btn-sm btn-info">Details</a>
                    <a asp-action="Edit" asp-route-id="@user.UserId" class="btn btn-sm btn-warning">Edit</a>
                    <a asp-action="Delete" asp-route-id="@user.UserId" class="btn btn-sm btn-danger"
                       onclick="return confirm('Bạn có chắc chắn muốn xóa người dùng này không?');">
                        Delete
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-center">
    @Html.PagedListPager(
            Model,
            page => Url.Action("All", new
            {
                page,
                name = Context.Request.Query["name"],
                username = Context.Request.Query["username"],
                email = Context.Request.Query["email"],
                gender = Context.Request.Query["gender"]
            }),
            new PagedListRenderOptions
    {
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        MaximumPageNumbersToDisplay = 5
    }
            )
</div>